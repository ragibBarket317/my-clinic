import { create } from "zustand";
export const useStore = create((set) => ({
  firstname: "",
  lastName: "",
  gender: "",
  dob: "",
  patientsAge: 0,
  account: "",
  clinic: "",
  plan: "",
  benefityear: "",
  risk: "",
  statins: "",
  tobaccoUse: "",
  dm2: "",
  dexa: "",
  QTR1: -1,
  QTR1Date: null,
  QTR2: -1,
  QTR2Date: null,
  QTR3: -1,
  QTR3Date: null,
  QTR4: -1,
  QTR4Date: null,
  eGRFDate: null,
  uACRDate: null,
  aweStatus: "",
  aweDate: "",
  aweCbpSystolic: 0,
  aweCbpdiastolic: 0,
  phqVersion: "2",
  awePhq2Level: "",
  awePhq2Score: 2,
  awePhq2Date: "",
  awePhq9Level: "",
  awePhq9Score: 5,
  awePhq9Date: "",
  colStatus: "",
  colDate: "",
  bcsDate: "",
  acceStatus: "",
  acceDate: "",
  acceCbpSystolic: 129,
  acceCbpdiastolic: 76,
  acceFallRisk: "",
  attestation: "",
  hosper: "",
  eyeStatus: "",
  eyeDate: "",
  eyeResults: "",
  footStatus: "",
  footDate: "",
  showDarkMode: localStorage.getItem("showDarkMode") === "true" || false,

  searchQuery: "",
  auth: null,
  handleSearch: {},
  showMedicalHistory: false,
  showEditExaminations: false,
  showLabs: false,
  notification: [],
  count: 0,
  isMissedAppointModalOpen: false,
  bmi: -1,
  bmiDate: null,
  chronicConditions: "",
  theme: { name: "Default", color: "#5c2d91" },
  colorMode: "system",
  //set functions
  setShowMedicalHistory: (medicalHistory) =>
    set({ showMedicalHistory: medicalHistory }),
  setShowEditExaminations: (examination) =>
    set({ showEditExaminations: examination }),
  setShowLabs: (labs) => set({ showLabs: labs }),
  setFirstname: (firstname) => set({ firstname }),
  setLastname: (lastName) => set({ lastName }),
  setDob: (dob) => set({ dob }),
  setGender: (gender) => set({ gender }),
  setAccount: (newAccount) => set({ account: newAccount }),
  setPatientsAge: (age) => set({ patientsAge: age }),
  setClinic: (newClinic) => set({ clinic: newClinic }),
  setPlan: (newPlan) => set({ plan: newPlan }),
  setBenefityear: (newBenefityear) => set({ benefityear: newBenefityear }),
  setRisk: (risk) => set({ risk }),
  setStatins: (statins) => set({ statins }),
  setTobaccoUse: (tobaccoUse) => set({ tobaccoUse }),
  setDm2: (dm2) => set({ dm2 }),
  setDexa: (dexa) => set({ dexa }),
  setQTR1: (QTR1) => set({ QTR1: parseFloat(QTR1) || -1 }),
  setQTR1Date: (QTR1Date) => set({ QTR1Date: QTR1Date || null }),
  setQTR2: (QTR2) => set({ QTR2: parseFloat(QTR2) || -1 }),
  setQTR2Date: (QTR2Date) => set({ QTR2Date: QTR2Date || null }),
  setQTR3: (QTR3) => set({ QTR3: parseFloat(QTR3) || -1 }),
  setQTR3Date: (QTR3Date) => set({ QTR3Date: QTR3Date || null }),
  setQTR4: (QTR4) => set({ QTR4: parseFloat(QTR4) || -1 }),
  setQTR4Date: (QTR4Date) => set({ QTR4Date: QTR4Date || null }),
  setEGRFDate: (eGRFDate) => set({ eGRFDate }),
  setUACRDate: (uACRDate) => set({ uACRDate }),
  setAweStatus: (aweStatus) => set({ aweStatus }),
  setPhqVersion: (phqVersion) => set({ phqVersion }),
  setAweDate: (aweDate) => set({ aweDate }),
  setAweCbpSystolic: (aweCbpSystolic) => set({ aweCbpSystolic }),
  setAweCbpdiastolic: (aweCbpdiastolic) => set({ aweCbpdiastolic }),
  setAwePhq2Level: (awePhq2Level) => set({ awePhq2Level }),
  setAwePhq2Score: (awePhq2Score) => set({ awePhq2Score }),
  setAwePhq2Date: (awePhq2Date) => set({ awePhq2Date }),
  setAwePhq9Level: (awePhq9Level) => set({ awePhq9Level }),
  setAwePhq9Score: (awePhq9Score) => set({ awePhq9Score }),
  updatePhq9Level: (score) => {
    if (score <= 4) {
      set({ awePhq9Level: "normal" });
    } else if (score >= 5 && score <= 9) {
      set({ awePhq9Level: "mild" });
    } else if (score >= 10 && score <= 14) {
      set({ awePhq9Level: "moderate" });
    } else if (score >= 15 && score <= 19) {
      set({ awePhq9Level: "moderately severe" });
    } else {
      set({ awePhq9Level: "severe" });
    }
  },
  setAwePhq9Date: (awePhq9Date) => set({ awePhq9Date }),
  setColStatus: (colStatus) => set({ colStatus }),
  setColDate: (colDate) => set({ colDate }),
  setBcsDate: (bcsDate) => set({ bcsDate }),
  setAcceStatus: (acceStatus) => set({ acceStatus }),
  setAcceDate: (acceDate) => set({ acceDate }),
  setAcceCbpSystolic: (acceCbpSystolic) => set({ acceCbpSystolic }),
  setAcceCbpdiastolic: (acceCbpdiastolic) => set({ acceCbpdiastolic }),
  setAcceFallRisk: (acceFallRisk) => set({ acceFallRisk }),
  setAttestation: (attestation) => set({ attestation }),
  setHosper: (hosper) => set({ hosper }),
  setEyeStatus: (eyeStatus) => set({ eyeStatus }),
  setEyeDate: (eyeDate) => set({ eyeDate: eyeDate || "" }),
  setEyeResults: (eyeResults) => set({ eyeResults }),
  setFootStatus: (footStatus) => set({ footStatus }),
  setFootDate: (footDate) => set({ footDate: footDate || "" }),
  setShowDarkMode: (value) => {
    set({ showDarkMode: value });
    localStorage.setItem("showDarkMode", value);
    if (value) {
      document.body.classList.add("dark-mode");
    } else {
      document.body.classList.remove("dark-mode");
    }
  },

  setSearchQuery: (query) => set({ searchQuery: query }),
  setAuth: (user) => set({ auth: user }),
  setHandleSearch: (item) => set({ handleSearch: item }),
  setNotification: (notify) => set({ notification: notify }),
  setCount: (num) => set({ count: num }),
  setIsMissedAppointModalOpen: (modalOpen) =>
    set({ isMissedAppointModalOpen: modalOpen }),
  setBmi: (num) => set({ bmi: num }),
  setBmiDate: (bmiDate) => set({ bmiDate: bmiDate }),
  setChronicConditions: (chronicConditions) => set({ chronicConditions }),
  setTheme: (newTheme) => set({ theme: newTheme }),
  setColorMode: (mode) => set({ colorMode: mode }),
}));
